/**
 * Created by dmytro on 10/7/16.
 */

function classifier_search(url, params, share_selector) {
  // $('#spinner-container').show();
  $.ajax({
    type: 'get',
    url: url,
//    async: false,
    dataType: 'script',
    data: params,
    complete: function() {
      share_buttons_set_url(share_selector, this.url);
    }
  });
  // $('#spinner-container').hide();
}

// this function return search results and using for sort them
// sorting params may be empty
function simple_search(url, edrpou, _sort_conf) {
    $('#spinner-container').show();
    var town_id = $('#_item').data('town-id');
    var role = $('[name="[role]"]:checked').val();
    var data = {
        town_id: town_id,
        sort_col: (_sort_conf != null ? _sort_conf.sort_col : null),
        sort_dir: (_sort_conf != null ? _sort_conf.sort_dir : null)
    };
    data[role + '_edrpous'] = edrpou;

    $.ajax({
        type: 'get',
        url: url,
        async: false,
        dataType: 'script',
        data: data,
        complete: function() {
//            console.log(this.url);
            share_buttons_set_url($('#share_results .addthis_inline_share_toolbox'), this.url);
        }
    });
    $('#spinner-container').hide();
}

// this function return search results and using for sort them
// sorting params may be empty
function advanced_search(url, edrpous, period, _sort_conf) {
  $('#spinner-container').show();
  var town_id = $('#_item_payers').data('town-id');
  $.ajax({
    type: 'get',
    url: url,
    async: false,
    dataType: 'script',
    data: {
      town_id: town_id,
      payers_edrpous: edrpous.payer,
      recipt_edrpous: edrpous.recipt,
      period: period,
      sort_col: (_sort_conf != null ? _sort_conf.sort_col : null),
      sort_dir: (_sort_conf != null ? _sort_conf.sort_dir : null)
    }
  });
  $('#spinner-container').hide();
}

// this function return items by type and using for sort them
// function change items list and items select options depend on type value
// sorting params may be empty
// sorting apply for items list only (manage by controller)
function get_items(url, type, role, _sort_param) {
  $('#spinner-container').show();
  var town_id = $('#_item_type_payers').data('town-id');
  $.ajax({
    type: 'get',
    url: url,
    async: false,
    dataType: 'script',
    data: {
      town_id: town_id,
      type: type,
      role: role,
      sort_column: (_sort_param != null ? _sort_param.sort_col : null),
      sort_direction: (_sort_param != null ? _sort_param.sort_dir : null)
    }
  });
  $('#spinner-container').hide();
}

function share_buttons_set_url(selector, url) {
  selector.attr('data-url', url);
}

// switch sort direction
function sort_direction(attr) {
  if (attr == 'asc') {
    return 'desc';
  }
  else {
    return 'asc';
  }
}

// add breadcrumbs element and create event-listener for handheld remove it
function addBreadcrumbs(title, url) {
    var breadcrumbs_list = $('.breadcrumb');
    var parent_el = breadcrumbs_list.find('li.active');
    parent_el.children().attr('href', url).attr('data-remote', "true");
    parent_el.removeClass('active');
    var active_li = $('<li></li>').addClass('active');
    var a_value = $('<a>').html(title);
    active_li.append(a_value);
    breadcrumbs_list.append(active_li);
    // Handheld action 'back'
    parent_el.children().click(function() {
        // remove previous <li>
        parent_el.next().remove();
        parent_el.addClass('active');
    });
}

function draw_chart(labels, dataset, params) {
  console.log(labels);
  console.log(dataset);
  console.log(params);

//  if (barChart) {
//    barChart.destroy();
//    $('#most-received').hide();
//  }

  var data_set = dataset.map(function (data) {
    return parseFloat(data);
  });
  console.log(data_set);

  if(typeof params !== 'undefined' || data_set.size > 5) {
    $('#most-received').show();


    // prepare chart options and datasets
    var data = {
      labels: labels,
      datasets: [
        {
          label: I18n.t('modules.classifier.chart.total'),
          backgroundColor: 'rgba(98, 141, 182, 1)',
          hoverBackgroundColor: 'rgba(255, 211, 4, 1)',
          data: data_set
        }
      ]
    };
    var ctx = $('#barChart').get(0);
    //  var ctx = $('#barChart');
    var options = {
      maintainAspectRatio: false,
      tooltips: {
        backgroundColor: 'rgba(12, 34, 49, 1)'
      },
      legend: {
        display: false
      },
      scales: {
        yAxes: [{
          gridLines: {
            display: false
          },
          barPercentage: 0.7,
          ticks: {
            fontSize: $(window).width() >= 1024 ? 12 : 8,
            autoSkip: false,
            maxRotation: 0
          }
        }],
        xAxes: [{
          type: 'logarithmic',
          position: 'bottom',
          gridLines: {
            drawBorder: false,
            display: false
          },
          ticks: {
            min: data_set[data_set.length-1] / 2,
            max: data_set[0] * 2,
            display: false
          }
        }]
      },
      animation: {
        duration: 2000,
        easing: 'easeInOutSine',
        onProgress: function () {
          // render the value of the chart above the bar
          var ctx = this.chart.ctx;
          ctx.font = Chart.helpers.fontString(
              $(window).width() >= 1024 ? Chart.defaults.global.defaultFontSize : Chart.defaults.global.defaultFontSize-4,
              'normal',
              Chart.defaults.global.defaultFontFamily
          );
          ctx.fillStyle = this.chart.config.options.defaultFontColor;
          ctx.textAlign = 'left';
          ctx.textBaseline = 'top';
          this.data.datasets.forEach(function (dataset) {
            for (var i = 0; i < dataset.data.length; i++) {
              var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model;
              ctx.fillText(parseInt(dataset.data[i] / 1000) + ' тис. грн.', model.x + 5, model.y - 5);
            }
          });
        }
      }
    };

    // create and draw the chart
    var barChart = new Chart(ctx, {
      type: 'horizontalBar',
      data: data,
      options: options
    });

  }
}