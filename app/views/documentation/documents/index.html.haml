= stylesheet_link_tag "themes/default/style.min.css", :media => "all"
= javascript_include_tag "jstree.js"

:css
  #tree { float:left; min-width:319px; border-right:1px solid silver; overflow:auto; padding:0px 0; }

%h1 Документи

.documentation
  .col-sm-4
    #tree


%table
  %tr
    %th Category
    %th Title
    %th Description
    %th Issued
    %th Path
    %th Preview ico
    %th
    %th
    %th

  - @documentation_documents.each do |documentation_document|
    %tr
      %td= documentation_document.category_id
      %td= documentation_document.title
      %td= documentation_document.description
      %td= documentation_document.issued
      %td= documentation_document.path
      %td= documentation_document.preview_ico
      %td= link_to 'Show', documentation_document
      %td= link_to 'Edit', edit_documentation_document_path(documentation_document)
      %td= link_to 'Destroy', documentation_document, :method => :delete, :data => { :confirm => 'Are you sure?' }

%br

= link_to 'New Document', new_documentation_document_path

:javascript
  $('#tree').jstree({
    "core" : {
      "animation" : 0,
      "check_callback" : true,
      "themes" : { "stripes" : true },
      'data' : {
        'url' : function (node) {
          return node.id === '#' ?
            'categories_tree_root.json' : 'categories_tree.json';
        },
        'data' : function (node) {
          return { 'id' : node.id };
        }
      }
    },
    "types" : {
      "#" : {
        "max_children" : 1,
        "max_depth" : 4,
        "valid_children" : ["root"]
      },
      "root" : {
        "icon" : "/static/3.1.1/assets/images/tree_icon.png",
        "valid_children" : ["default"]
      },
      "default" : {
        "valid_children" : ["default","file"]
      },
      "file" : {
        "icon" : "glyphicon glyphicon-file",
        "valid_children" : []
      }
    },
    "plugins" : [
      "contextmenu", "dnd", "search",
      "state", "types", "wholerow"
    ]
  }).on('delete_node.jstree', function (e, data) {
        $.get('?operation=delete_node', { 'id' : data.node.id })
            .fail(function () {
                data.instance.refresh();
            });
    })
    .on('create_node.jstree', function (e, data) {
        $.get('?operation=create_node', { 'id' : data.node.parent, 'position' : data.position, 'text' : data.node.text })
            .done(function (d) {
                data.instance.set_id(data.node, d.id);
            })
            .fail(function () {
                data.instance.refresh();
            });
    })
    .on('rename_node.jstree', function (e, data) {
        $.get('?operation=rename_node', { 'id' : data.node.id, 'text' : data.text })
            .fail(function () {
                data.instance.refresh();
            });
    })
    .on('move_node.jstree', function (e, data) {
        $.get('?operation=move_node', { 'id' : data.node.id, 'parent' : data.parent, 'position' : data.position })
            .fail(function () {
                data.instance.refresh();
            });
    })
    .on('copy_node.jstree', function (e, data) {
        $.get('?operation=copy_node', { 'id' : data.original.id, 'parent' : data.parent, 'position' : data.position })
            .always(function () {
                data.instance.refresh();
            });
    })
    .on('changed.jstree', function (e, data) {
        if(data && data.selected && data.selected.length) {
            $.get('?operation=get_content&id=' + data.selected.join(':'), function (d) {
                $('#data .default').html(d.content).show();
            });
        }
        else {
            $('#data .content').hide();
            $('#data .default').html('Select a file from the tree.').show();
        }
    });;