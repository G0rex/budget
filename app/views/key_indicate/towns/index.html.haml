:css
  #select2-chosen-2 div, #select2-chosen-3 div, .select2-choice {
    height: 35px !important;
  }

  .form-control {
    border-radius: 4px !important;
  }

= content_for :header do
  .head.pull-left
    = t('key_indicate.towns.index.header')

.col-xs-12{:style => 'margin-top: 20px; height: 100%'}
  .col-xs-1
    .input-daterange.pull-left
      %input{name: :year, :type => "text", :class => "year_datepicker form-control" }
  .col-xs-10
    = select_tag :town, options_for_select( $towns, ''), class: 'town_select form-control', include_blank: true, multiple: true
    %p{:style => 'font-size: 0.8em;'}
      = t('key_indicate.towns.index.change_towns')
  .col-xs-1
    %btn#compare_btn.btn.btn-primary
      = t('key_indicate.towns.index.compare')

#indicators_table
  - if $initial_towns.length > 0
    = render :partial => '/key_indicate/towns/indicators_table', :locals => {:indicators => $indicators, :towns => $initial_towns}

:javascript

  $(document).on('ready page:load', function() {

    var town_select = $(".town_select");
    var compare_btn = $('#compare_btn');

    I18n.locale = window.aHelper.lang();

    // ------------ Dynamically select town to compare ----------------
    town_select.select2(
      {
        allowClear: true,
        placeholder: I18n.t('key_indicate.towns.index.to_compare'),
        formatResult: formatSelect,
        formatSelection: formatSelect,
        escapeMarkup: function(m) { return m; },
        maximumSelectionSize: 5
      }
    ).on('change', function(){
      var num_of_selected = $(this).find('option:selected').length;
      if(num_of_selected > 0) {
        compare_btn.removeAttr("disabled");
      } else {
        compare_btn.attr("disabled", "disabled");
      }
    });

    town_select.select2("container").find("ul.select2-choices").sortable({
        containment: 'parent'
    });

    // this ajax query needs each time when page loaded because if variable in controller changed
    // it doesn't change in javascript (js saves old variables)
    $.ajax({
        url: "/key_indicate/towns/get_vars",
        type: "post",
        dataType: "json",
        success: function(data) {
          var initial_towns = data['initial_towns'];
          if(initial_towns.length > 0) {
            var towns = data['towns'];
            var array_for_select = [];
            $.each(towns, function(index, t) {
              if(initial_towns.indexOf(t[0]) >= 0) {
                array_for_select.push({id: t[1], text: t[0]})
              }
            })
            town_select.select2("data", array_for_select);
            compare_btn.removeAttr("disabled");
          } else {
            compare_btn.attr("disabled", "disabled");
          }
        }
      })

    function formatSelect(el) {
      return el.text;
    }

    // ---------------------- COMPARE BUTTON ---------------------------
    compare_btn.on("click", function() {
      var data = [];
      $('.select2-search-choice').each(function(index, d) {
        data.push(d.innerText.replace('\n', ''));
      })
      $.ajax({
        url: "/key_indicate/towns/reset_table/" + $('input[name="year"]').val(),
        type: "post",
        dataType: "html",
        data: {"data": data},
        success: function(data) {
          $('#indicators_table').html(data);
        }
      })
    })

    // ------------------------ DATEPICKER -----------------------------
    $.fn.datepicker.dates[window.aHelper.lang()];
    var endDate = new Date(new Date().getFullYear() - 1,0,1);
    var year_datepicker = $(".year_datepicker");

    year_datepicker.datepicker( {
      format: 'yyyy',
      startView: 2,
      endDate: endDate,
      multidate: true,
      language: window.aHelper.lang(),
      autoclose: true,
      minViewMode: 'years',
      viewMode: 'years',
      pickTime: false
    });

    year_datepicker.datepicker('setDate', endDate);

  });