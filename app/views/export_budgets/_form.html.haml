:scss
  .note-btn-group.btn-group.note-remove {
    display:none;
  }
  .content_page{
    border: 1px solid red;
  }
  .tsel {
    width: 250px;
  }
  .add-btn{
    width: 150px;
    margin: 0 auto;
    margin-bottom: 20px;
    border: 1px solid darkgrey;
    border-radius: 4px;
    background-color: grey;
    color: white;
    padding: 7px;
    text-align: center;
    &:hover,&:focus{
      cursor: pointer;
      color:grey;
      background-color: white ;
      //box-shadow: 0px 0px 13px 3px rgba(0,0,0,0.73);
      transition: all .8s linear;
    }
  }
  .datepicker
  {
    z-index: 1051 !important;
  }
  #export_button_submit
  {
    margin-top: 10px;
  }
  #new_export_budget > div.form-group.string.optional.export_budget_pages_header > label{
    width: 50%;
  }
  .note-editable.panel-body{
    padding: 0 !important;
  }
  .visual_place{
    cursor: pointer;
    &:hover,&:focus{
      box-shadow: 0px 0px 13px 3px rgba(0,0,0,0.73);
      transition: all .4s linear;
    }
  }
  .export-budget-form-container{
    margin-left:20%;
    width: 831px;
  }
-#-binding.pry
.export-budget-form-container
  = simple_form_for(@export_budget) do |f|
    = f.input :year, label: t('.year'),as: :string,input_html: { class: "datepicker" }
    = f.input :title, label: t('.title')
    = f.input :town,label: t('.town_name'),input_html: {data_admin: current_user.is_admin?, value: @export_budget.town.id }
    = f.simple_fields_for :pages,:defaults => { :input_html => { :class => "summernote_input" } } do |ff|
      = ff.input :title_page,as: :text ,:input_html => { data_name: "title_page" } ,label: t('.title_page'),:contenteditable => "true"
      = ff.input :content_page,as: :text,:input_html => { data_name: "content_page" }, label: t('.content_page'), :contenteditable => "true"
      .add-btn{data_name: 'new_page'}
        додати сторінку
      = ff.simple_fields_for :content,:defaults => { :input_html => { :class => "summernote_input_with_visual" } } do |fff|
        -@export_budget.pages[:content].each_with_index do |(key,value),index|
          = fff.input key,as: :text ,label: t(".#{key}"),:input_html => { data_number: index , data_name: key,value: value },:contenteditable => "true"
          .add-btn{data_name: 'new_page'}
            додати сторінку
      = ff.input :last_page,as: :text, label: t('.last_page'),:input_html => { data_name: "last_page" }, :contenteditable => "true"
    = f.button :submit, t('.save'),id: 'export_button_submit', class: 'btn btn-primary'
.col-xs-5#visual_list
:javascript
  var sankey = {};
  sankey.tax_rot = '';
  sankey.tax_rov = '';

  $(document).ready(function() {

    $('#add_page').change(function() { alert('dasdsad'); });
    var set_town_in_title_page = function(town){
      $('#title_page_city').html(town);
    };
    var set_title_in_title_page = function(title){
      $('#title_page_title').html(title);
    };
    var set_year_in_title_page = function(year){
      $('#title_page_year').html(year);
    };
    var add_page_number = 0;
    var create_textarea_input = function(path){

      var form_div = $('<div></div>');
      form_div.addClass('form-group text required export_budget_pages_content_budget_test');
      var label = $('<label>Test</label>');
      label.addClass('text required control-label');
      label.attr('for','test');
      $(form_div).append(label);

      var textarea_identificator = 'add_page' + add_page_number;
      add_page_number++;
      var textarea = $('<textarea></textarea>');
      textarea.attr('id',textarea_identificator);
      textarea.attr('name','export_budget[pages][content][' + textarea_identificator + ']');
      label.after(textarea);
      fill_input(textarea,path);
      init_summernote_with_visual_button(textarea);
      return form_div;
    }
    var get_textarea_id = function(editor_panel){
      // this function return textarea id
      // get one params editor dom element
      // first we get editor parent
      // after that we search neighbor textarea
      // and return textarea id
      return  "#" + $(editor_panel).parents('.note-editor').siblings('textarea').attr('id');
    }

    $('#export_budget_title').change(function(){
      set_title_in_title_page($(this).val());
    });
    $('#export_budget_year').on("change",function(e){
      set_year_in_title_page($(this).val());
    });
    var send_ajax = function(number,page_id){
      $.ajax({
        url: "#{widgets_visualisation_list_path(current_user)}",
        data: { data_number: number,
                page_id: page_id  }
      })
    };
    var fill_input = function(input_name,url){
      if(!$(input_name).val()){
        $.ajax({
          url: url,
          success: function(data){
            $(input_name).summernote('code',data);
            $('.visual_place').click(function(){
              send_ajax($(this).attr('data-number'),get_textarea_id(this));
            });
          }
        });
      }
    }

    var init_summernote = function(field_selector){
      $('.summernote_input').summernote({
        disableResizeEditor: true,
        minHeight: 300
      });
    }

    var init_summernote_with_visual_button = function(field_selector) {
      $(field_selector).summernote({
        disableResizeEditor: true,
        maxHeight: '1145px',
        disableDragAndDrop: true,
        toolbar: [
          // [groupName, [list of button]]
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['font', ['strikethrough', 'superscript', 'subscript','fontname']],
          ['fontsize', ['fontsize']],
          ['insert',['picture','table']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          // ['height', ['height']],
          ['mybutton', ['visualButton']]
        ],
        buttons: {
          // add button for show visual list
          visualButton: visualButton
        },
        minHeight: 300,
      });
    }




    var visualButton = function (context) {
      var ui = $.summernote.ui;

      // create button
      var button = ui.button({
        contents: '<span class="glyphicon glyphicon-eye-open" aria-hidden="true"> Visual</span>',
        tooltip: 'visual',
        click: function () {
          send_ajax('0',get_textarea_id(this));
        }
      });

      return button.render();   // return button as jquery object
    }
    $(".summernote_input_with_visual").on("summernote.keyup", function (e) {   // callback as jquery custom event
      var page_dom = $($(this).val());
      var header = page_dom.find('.header_title');
      content_page_row_number = header.attr('header_number');
      content_page_row_text = header[0].innerHTML;
      $("div[data-header-numb='"+ content_page_row_number +"']").html(content_page_row_text);
    });
    $('#export_budget_year').datepicker({
      autoclose: true,
      format: 'yyyy',
      viewMode: 'years',
      minViewMode: 'years',
      locale: 'ua'
    });

    $('.summernote_input').map(function(item,i,arr){
      init_summernote($(this));
      var path = "#{template_load_path('part_name')}".replace('part_name',$(this).attr('data_name'));
      fill_input($(this),path);
    });

    $('.summernote_input_with_visual').map(function(item,i,arr){
      init_summernote_with_visual_button($(this));
      var path = "#{template_load_path('part_name')}".replace('part_name',$(this).attr('data_name'));
      fill_input($(this),path);
    });

    init_town_select2_with_field_id('#export_budget_town',"#{search_for_towns_town_path}");
    $('#export_budget_town').on('change',function(){
      set_town_in_title_page($(this).select2('data').text);
    });

    $('body').on('click','.add-btn',function(){
      var path = "#{template_load_path('part_name')}".replace('part_name',$(this).attr('data_name'));
      var form_dom = create_textarea_input(path);
      $(this).after(form_dom);


      var new_add_button = $(this).clone();
      setTimeout(function(){
        form_dom.after(new_add_button);
      },1000);

    });
  });
