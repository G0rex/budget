-# http://bl.ocks.org/mbostock/1005873
-#http://bl.ocks.org/mbostock/4347473
-#http://bl.ocks.org/mbostock/1005873
:css
  .node {
    fill: #ddd;
    stroke: #fff;
    width: 5px;
  }

.icicle
  #sidebar.col-xs-3
  #chart


:javascript
  $(document).ready(function() {

    var w = $(document).width() - $('#sidebar').width() - 50,
        h = $(document).height() - 120,
        x = d3.scale.linear().range([0, w]),
        y = d3.scale.linear().range([0, h]);

    var totalSize
    var tooltip = d3.select(".collapsible").append("div")
        .attr("id", "tooltip")
        .style("opacity", 0);

    var color = d3.scale.category20c();

    $('.icicle #chart').width(w).height(h)

    var lastClicked;

    var vis = d3.select(".icicle #chart")
      .append("svg:svg")
        .attr("width", w)
        .attr("height", h);

    var partition = d3.layout.partition()
        .value(function(d) { return d.size; });

    d3.json("/widgets/visify/get_sunburst_data/#{budget_file_id}", function(error, root) {
      var g = vis.selectAll("g")
          .data(partition.nodes(root))
        .enter().append("svg:g")
          .attr("transform", function(d) { return "translate(" + x(d.y) + "," + y(d.x) + ")"; })
          .on("click", function(d) {
            if (lastClicked == d) {
              var _d = d
              dblclick(_d)
            } else {
              lastClicked = d
              $('.icicle #sidebar').html(getItemInfoHtml(d))
            }
          })
          .on("dblclick", function(d) {
          })

      totalSize = root.size;

      var kx = w / root.dx,
          ky = h / 1;

      g.append("svg:rect")
          .attr("width", root.dy * kx)
          .attr("height", function(d) { return d.dx * ky; })
          .attr("fill", function(d) { return d.color || color((d.children ? d : d.parent).label); })

      g.append("svg:text")
          .attr("transform", transform)
          .attr("dy", ".35em")
          .style("opacity", function(d) { return d.dx * ky > 12 ? 1 : 0; })
          .text(function(d) { return d.label; })

      function transform(d) {
        return "translate(8," + d.dx * ky / 2 + ")";
      }

      function dblclick(d) {
        if (!d.children) return;

        kx = (d.y ? w - 40 : w) / (1 - d.y);
        ky = h / d.dx;
        x.domain([d.y, 1]).range([d.y ? 40 : 0, w]);
        y.domain([d.x, d.x + d.dx]);

        var t = g.transition()
            .duration(d3.event.altKey ? 7500 : 750)
            .attr("transform", function(d) { return "translate(" + x(d.y) + "," + y(d.x) + ")"; });

        t.select("rect")
            .attr("width", d.dy * kx)
            .attr("height", function(d) { return d.dx * ky; });

        t.select("text")
            .attr("transform", transform)
            .style("opacity", function(d) { return d.dx * ky > 12 ? 1 : 0; });

        d3.event.stopPropagation();
      }
    });

    function getItemInfoHtml(node) {
      percentage = (100 * node.size / totalSize).toPrecision(3);
      label = node.label || ''
      div = "<h3>" + label + "</h3>"
        + "<h3 class='percentage'>" + percentage + "%</h3>"
        + "<h4 class='amount'>" + node.size.toLocaleString() + " грн</h4>"

      if (node.description) {
        div = div + "<hr/>" +  "<div class='description'>" + node.description + "</div>"
      }

      return div
    }

    function getTooltipHtml(node) {
      percentage = (100 * node.size / totalSize).toPrecision(3);
      label = node.label || ''
      div = "<h3 class='percentage'>" + percentage + "% </h3> <h5> " + node.size.toLocaleString() + " грн</h5>"
        + "<hr/>"
        + "<div>" + label + "</div>"

      return div
    }

  })
