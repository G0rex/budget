:css
  .axis text {
    font: 10px sans-serif;
  }

  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }

  .bar {
    fill: steelblue;
    cursor: pointer;
  }

  #slider_year_chart .bartext {
    font-size: 0.6em;
  }

  #slider_year_chart .x.axis path {
    display: none;
  }

  label {
    position: absolute;
    top: 10px;
    right: 10px;
  }

#slider_year_chart.col-xs-4

:javascript
  function aSliderYearChart(aContainer, slider) {
    var margin = {top: 20, right: 20, bottom: 30, left: 50},
        width, height;

    var x, y, xAxis, yAxis;

    var svg;

    var color;

    var data, center_node;

    var current_month = 0, current_year = 0;

    function delay(d, i) { return i * 10; }

    function hide() {
      $("#slider_year_chart").height(0)
      svg.selectAll("*").remove()
    }

    function sort(data) {
      var x0 = y.domain(data.sort(false
              ? function(a, b) { return a.amount - b.amount; }
              : function(a, b) { return d3.ascending(parseInt(a.label), parseInt(b.label)); })
              .map(function(d) { return d.label; }))
              .copy();

      var transition = svg.transition().duration(150),
          delay = function(d, i) { return i * 10; };

      transition.selectAll(".bar")
          .delay(delay)
          .attr("y", function(d) { return x0(d.label); });

      transition.select(".y.axis")
          .call(yAxis)
        .selectAll("g")
          .delay(delay);
    }

    function get_history_data(data) {
      compare_years = []
      $.each( data, function( year, months ) {
        compare_years.push( { label: year, amount: months['0'] } )
      })
      return compare_years
    }

    function mouseclick(d) {
      if(d.label != current_year) {
        $("#slider_year_chart").find("rect").css("fill", "#9ecae1");
        $(this).css("fill", "#3182bd");
        current_year = d.label;
        slider.show(center_node, current_month, current_year);
        chart.show(current_year, current_month);
      } else if(current_month != 0) {
        current_month = 0;
        $("#slider_compare").find("rect").css("fill-opacity", "0.5").css("fill", "#9ecae1");
        slider.set_month(0);
        chart.show(current_year, current_month);
      }
    }

    function mouseover(d) {
      $(this).css("fill", "#3182bd");
    }

    function mouseout(d) {
      if(d.label != current_year) {
        $(this).css("fill", "#9ecae1");
      }
    }

    function get_month_by_num(month) {
      return #{I18n.t :abbr_month_names, :scope => :date}[month]
    }

    function show(data) {

      sort(data);

      svg.selectAll("*").remove();
      $("#slider_year_chart").height(height + margin.top + margin.bottom);

      x.domain([0, d3.max(data, function(d) { return d.amount; })]);
      y.domain(data.map(function(d) { return d.label; }));

      svg.append("g")
          .attr("class", "y axis")
          .attr("transform", "translate(0,0)")
          .call(yAxis);

      svg.selectAll(".bar")
          .data(data)
        .enter().append("rect")
          .attr("class", "bar")
          .style("fill", function(d) { return d.label == current_year ? "#3182bd" : "#9ecae1"; })
          .attr("x", 0)
          .attr("width", 0)
          .attr("y", function(d) { return y(d.label); })
          .attr("height", y.rangeBand())
          .on("mouseover", mouseover)
          .on("mouseout", mouseout)
          .on("click", mouseclick);

      svg.selectAll(".bartext")
        .data(data)
      .enter().append("text")
        .attr("class", "bartext")
        .attr("text-anchor", "end")
        .text(function(d) { return aVisify.helpers.formatNumber(d.amount); })

      svg.transition().duration(250).selectAll(".bar")
          .delay(delay)
          .attr("width", function(d) { return x(d.amount); })

      svg.transition().duration(250).selectAll(".bartext")
        .attr("y", function(d) { return (y(d.label)+margin.top); })
        .attr("x", function(d) { return (x(d.amount)+margin.left); })
    }

    return {
      initialize: function(pHeight) {
        var number_of_years = #{@range}.length;
        width = $(aContainer).width() - margin.left - margin.right,
        height = pHeight*number_of_years;

        x = d3.scale.linear()
          .range([0, width]);

        y = d3.scale.ordinal()
          .rangeRoundBands([0, height], .1);

        xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");

        svg = d3.select("#slider_year_chart").append("svg")
            .attr("width", width + 2*margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      },
      hide: hide,
      show: function(node, month, year) {
        if(!node.history) {
          hide();
          return;
        }
        center_node = node;
        data = get_history_data(node.history);

        if (data == null || data.length == 0){
          return;
        }
        current_month = month;
        current_year = year;
        show(data);
      },
      current_month: function() {
        return current_month;
      },
      set_month: function(month) {
        current_month = month;
      }
    }
  }

  $(document).bind('page:change', function(e) {

    I18n.locale = window.aHelper.lang();

    function set_visiframe_inframe() {
      src = window.location.href;
      $('#embed_visual input').val("<iframe width='900' height='600' src='" + src + "'></iframe>")
      $('.tab-content iframe').attr('src', src)
      $('#embed_visual').find('.iframe_size_select').html("<option value=\"300\">300x300</option>\
                                                            <option value=\"500\">500x500</option>\
                                                            <option value=\"default\" selected>900x600</option>\
                                                            <option value=\"other\">" + I18n.t('iframe.size') + "</option>")
      $('#embed_visual').find('.iframe_other_size').html("");
    }

    set_visiframe_inframe();

  })