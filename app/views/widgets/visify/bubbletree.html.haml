-#https://github.com/okfn/bubbletree

= javascript_include_tag "jquery.history.js"
= javascript_include_tag "raphael.js"
= javascript_include_tag "vis4.js"
= javascript_include_tag "Tween.js"
= javascript_include_tag "bubbletree.js"
= javascript_include_tag "cofog.js"


.bubbletree
  = render partial: 'tree_chart_modify', :locals => { budget_file_id: @budget_file.id }

:javascript
  var aTreeChart = function (aContainer) {
    var self;
    var bubbleTree, centerNode = null;

    function clear() {
      d3.select(aContainer + ' #chart').selectAll("*").remove();
    }

    function nodeClick(node) {
      centerNode = node;
      self.clickCallback(node);
    }

    return {
      initialize: function(options) {
        self = this;
        self.clickCallback = options.clickCallback;

        $(aContainer + ' #chart').width(options.width).height(options.height);
      },
      show: function(data) {
        clear();

        if (!data) return;

        bubbleTree = new BubbleTree({
            data: data,
            container: aContainer + ' #chart',
            sortBy: 'label',
            bubbleType: ['icon', 'plain'],
            centerNode: centerNode,
            nodeClickCallback: nodeClick,
            tooltipCallback: function(e) {
              var tooltip = $('.bubbletree #svg_tooltip');
              if(e.type == "SHOW") {
                tooltip.addClass("my-hover").css('left', e.bubblePos.x).css('top', e.bubblePos.y );
                var slider_chart = aSliderChart('#svg_tooltip .tooltip-content');
                slider_chart.initialize(250, {clickCallback: function(year){
                  var amount = 0, amount_fact = 0;
                  if(e.node['total_history']['plan'] && e.node['total_history']['plan'][year] && e.node['total_history']['plan'][year][0]) {
                    amount = e.node['total_history']['plan'][year][0]['total'];
                  }
                  if(e.node['total_history']['fact'] && e.node['total_history']['fact'][year] && e.node['total_history']['fact'][year][0]) {
                    amount_fact = e.node['total_history']['fact'][year][0]['total'];
                  }
                  $('#svg_tooltip .tooltip-subcontent').html("план: " + aVisify.helpers.formatNumber(amount) + " / \
                                                              факт: " + aVisify.helpers.formatNumber(amount_fact))
                }});
                slider_chart.show(e.node, "#{@sel_year}");
                tooltip.find(".tooltip-content svg").before("<span class='tooltip-title'>" + e.node.label + "</span><br/>\
                                                             <span class='tooltip-subcontent'>\
                                                             план: " + aVisify.helpers.formatNumber(e.node.amount) + " / \
                                                             факт: " + aVisify.helpers.formatNumber(e.node.amount_fact || 0) + "<br/>\
                                                             </span>")
              } else {
                var timeoutID = setTimeout(function() {
                  if(!$('#svg_tooltip').is(':hover')) {
                    tooltip.removeClass("my-hover");
                  }
                }, 1000)
              }
            }
        });
      },
      selectNode: function (node) {
        bubbleTree.navigateTo(node);
      },
      set_centerNode: function(node) {
        centerNode = node;
      },
      getCenterNode: function(node) {
        return bubbleTree.getCenterNode("bubble", node);
      },
      current_node: function() {
        return centerNode;
      }
    }
  }

