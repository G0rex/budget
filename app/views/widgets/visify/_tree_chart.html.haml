.visify
  .col-xs-12
    = render partial: 'sequence', :locals => { budget_file_id: budget_file_id }
    #under_sequence
  .col-xs-12.col-md-8
    #chart
    %canvas{:style => "display: none;"}
    #charts_tooltip.hidden
      %p
        %span#value

    .col-xs-12
      -#btn #save used to recieve trigger from out of iframe to get url for SVG image
      %button.btn.btn-primary#save{:style => "display: none"}
        %i.fa.fa-file-image-o
      .btn-group.pull-right
        %button.btn.btn-primary.btn_embed{"data-toggle" => "buttons-checkbox"}
          %i.fa.fa-code

    .col-xs-12
      //#iframe_embed
      #embed_visual.embed_hide.embed{'data-width' => '900px', 'data-height' => '600px', 'data-name' => 'bubbletree'}
        .input-group
          .input-group-addon
            = t('embed')
          %input.form-control
          %span.embed_label=t('iframe.select')
          %select.iframe_size_select#visual
          .iframe_other_size

    .slider.row
      = render partial: 'slider_chart'
      = render partial: 'slider_compare', :locals => { budget_file_id: budget_file_id }

  = render partial: 'sidebar', :locals => { budget_file_id: budget_file_id }

  = render partial: 'helpers'

:javascript

  $(document).ready(function() {

    // create chart according to the window size
    iframe_resize();

    // make tooltip movable with mouse
    var visifier = $(".visify").parent().attr('class');

    if(visifier != "bubbletree") {
        window.onmousemove = function (e) {
          var tooltipSpan = document.getElementById('charts_tooltip');
          var sequence_height = $('#sequence').outerHeight() + $('#under_sequence').outerHeight();
          var x = e.clientX || e.pageX,
              y = (e.clientY || e.pageY) - sequence_height;
          tooltipSpan.style.top = y + 'px';
          tooltipSpan.style.left = x + 'px';
        };
    }

  });

  $(window).resize(function() {
    // create chart according to the window size
    iframe_resize();
  });

  // Responsive SVG charts
  function iframe_resize() {
    var year = "#{@sel_year}",
        month = "#{@sel_month}";

    var sequence = aSequence('.visify')
    var chart = aTreeChart('.bubbletree');
    var slider = aSliderCompare('#slider_compare');
    var slider_chart = aSliderChart('#slider_chart', slider);
    var sidebar = aSidebar('.visify');

    var centerNode = null;

    var width;
    document_width = $(document).width();
    sidebar_width = $('.visify #sidebar').width();
    if(document_width > 2*sidebar_width) {
      width = document_width - sidebar_width - document_width*0.02;
    } else {
      width = document_width;
    }
    height = width*0.6;

    sequence.initializeBreadcrumbTrail({clickCallback: ItemClick});
    slider.initialize(100, {clickCallback: monthItemClick});
    slider_chart.initialize(250, {clickCallback: yearItemClick});
    sidebar.initialize(height, {clickCallback: ItemClick});
    $("#chart").html('');
    chart.initialize({ width: width, height: height, clickCallback: bubbleItemClick });

    d3.json("/widgets/visify/get_bubbletree_data/#{@budget_file.id}", function(data) {
      current_data = buildData(data);
      _data = centerNode = data;
      chart.set_centerNode(null);
      sequence.show(current_data);
      chart.show(current_data);
      slider_chart.show(current_data, year);
      slider.show(current_data, year);
      sidebar.show(current_data);
    })

    function bubbleItemClick(node) {
      console.log("click", node);
      sequence.show(node);
      slider_chart.show(node, year);
      //console.log("slider.current_node()", slider.current_node());
      //console.log("chart.current_node()", chart.current_node());
      //console.log("centerNode", centerNode);
      //console.log("node", node);
      if(slider.current_node() != centerNode) {
        slider.show(node, year);
      }
      sidebar.show(node);
      chart.set_centerNode(node);
      centerNode = node;
    }

    function yearItemClick(new_year) {
      if(slider_chart.current_month != 0 && year == new_year) {
        month = 0;
        slider.set_month(month);
        $("#slider_compare").find("rect").css("fill-opacity", "0.5").css("fill", "#9ecae1");
      }
      year = new_year;
      monthItemClick(month);
    }

    function monthItemClick(new_month) {
      if(month == new_month) {
        month = 0;
      } else {
        month = new_month;
      }
      current_data = buildData(_data);
      var curr_node;
      if(chart.getCenterNode) {
        curr_node = chart.getCenterNode(current_data);
        slider.set_centerNode(centerNode);
      } else if(centerNode != _data && !chart.getCenterNode) {
        curr_node = chart.get_CenterNode(centerNode);
        slider.set_centerNode(curr_node);
      }
      chart.show(current_data);
      console.log("curr_node", curr_node);
      chart.selectNode(curr_node);
    }

    function ItemClick(node) {
      sequence.show(node);
      slider_chart.show(node, year);
      slider.show(node, year);
      sidebar.show(node);
      chart.set_centerNode(node);
      chart.selectNode(node);
    }

    // get current data for all visifies
    function buildData(item) {

      if (!item.amount || !item.amount[year] || !item.amount[year][month])
        return;

      var node = {}
      node['amount'] = item.amount[year][month]
      node['history'] = item.amount
      node['taxonomy'] = item.taxonomy

      $.each(['key', 'label', 'color', 'icon'], function(k, v) {
        node[v] = item[v]
      })

      if (item.children) {
        node.children = []
        $.each(item.children, function(k, v) {
          child = buildData(v)
          if (child) node.children.push(child)
        });
      }

      return node;
    }
  }


  $(document).ready(function() {

    I18n.locale = window.aHelper.lang();

    function set_visiframe_inframe() {
      src = window.location.href;
      $('#embed_visual input').val("<iframe width='900' height='600' src='" + src + "'></iframe>")
      $('.tab-content iframe').attr('src', src)
      $('#embed_visual').find('.iframe_size_select').html("<option value=\"300\">450x600</option>\
                                                            <option value=\"default\" selected>900x1200</option>\
                                                            <option value=\"900\">1350x1900</option>\
                                                            <option value=\"other\">" + I18n.t('iframe.size') + "</option>")
      $('#embed_visual').find('.iframe_other_size').html("");
    }

    set_visiframe_inframe();

  })
