.visify
  #charts_tooltip.hidden
    %p
      %span#value

  .col-xs-12
    = render partial: 'sequence', :locals => { budget_file_id: budget_file_id }
    = render partial: 'under_sequence', :locals => { fond_codes: @fond_codes }
  .col-xs-12.col-md-8
    #chart
    %canvas{:style => "display: none;"}

    = render partial: 'embed_code', :locals => { data_width: "900px", data_height: "600px", data_name: "bubbletree", data_id: "visual" }

    .slider.row
      = render partial: 'slider_chart'
      = render partial: 'slider_compare', :locals => { budget_file_id: budget_file_id }

  = render partial: 'sidebar', :locals => { budget_file_id: budget_file_id }

  = render partial: 'helpers'

:javascript

  $(document).ready(function() {

    // create chart according to the window size
    iframe_resize();

    // make tooltip movable with mouse
    var visifier = $(".visify").parent().attr('class');

    if(visifier != "bubbletree") {
        window.onmousemove = function (e) {
          var tooltipSpan = document.getElementById('charts_tooltip');
          var sequence_height = $('#sequence').outerHeight() + $('#under_sequence').outerHeight();
          var x = e.clientX || e.pageX,
              y = (e.clientY || e.pageY) - sequence_height;
          tooltipSpan.style.top = y + 'px';
          tooltipSpan.style.left = x + 'px';
        };
    }


    $(window).resize(function() {
      // create chart according to the window size
      iframe_resize();
    });

    // Responsive SVG charts
    function iframe_resize() {
      var year = "#{@sel_year}",
          month = "#{@sel_month}",
          data_type = "#{@data_type}";

      var sequence = aSequence('.visify')
      var under_sequence = aUnderSequence('.visify')
      var chart = aTreeChart('.bubbletree');
      var slider = aSliderCompare('#slider_compare');
      var slider_chart = aSliderChart('#slider_chart', slider);
      var sidebar = aSidebar('.visify');

      var centerNode = null;

      var width;
      document_width = $(document).width();
      sidebar_width = $('.visify #sidebar').width();
      if(document_width > 2*sidebar_width) {
        width = document_width - sidebar_width - document_width*0.02;
      } else {
        width = document_width;
      }
      height = width*0.6;

      sequence.initializeBreadcrumbTrail({clickCallback: ItemClick});
      slider.initialize(100, {clickCallback: monthItemClick});
      slider_chart.initialize(250, {clickCallback: yearItemClick});
      sidebar.initialize(height, {clickCallback: ItemClick});
      $("#chart").html('');
      chart.initialize({ width: width, height: height, clickCallback: bubbleItemClick });

      d3.json("/widgets/visify/get_bubbletree_data/#{@budget_file.id}", function(data) {
        _data = data
        current_data = buildData(_data)
        preprocessData(current_data, 7);
        centerNode = current_data;

        chart.set_centerNode(null);
        sequence.show(current_data);
        chart.show(current_data);
        slider_chart.show(current_data, year);
        slider.show(current_data, year);
        sidebar.show(current_data);
      })

      function preprocessData(root, maxNodes) {
        if ((maxNodes + 2) < root.children.length) {
          var tmp = sortChildren(root.children);
          tmp.reverse();
          var keep = [], move = [], moveAmount = 0, breakdown;
          for (var i in root.children) {
            if (i < maxNodes) {
              keep.push(root.children[i]);
            } else {
              move.push(root.children[i]);
              moveAmount += Math.max(0, root.children[i].amount);
            }
          }

          root.children = keep;
          root.children.push({
            'label': I18n.t('other'),
            'name': I18n.t('other'),
            'amount': moveAmount,
            'children': move,
            'breakdown': true,
            'color': 'green',
          });

          for (var i in root.children) {
            if (root.children[i].children)
              preprocessData(root.children[i], maxNodes)
          }
        }
      }

      function sortChildren(children, alternate, sortBy) {
        var tmp = [], odd = true;
        if (sortBy == 'label') {
          sortBy = compareLabels;
          alternate = false;
        } else sortBy = compareAmounts;

        children.sort(sortBy);
        if (alternate) {
          while (children.length > 0) {
            tmp.push(odd ? children.pop() : children.shift());
            odd = !odd;
          }
          return tmp;
        } else {
          return children;
        }

        /*
         * compares two items by amount
         */
        function compareAmounts(a, b) {
            if (a.amount > b.amount) return 1;
            if (a.amount == b.amount) return 0;
            return -1;
        };

        /*
         * compares to item by label
         */
        function compareLabels(a, b) {
            if (a.label > b.label) return 1;
            if (a.label == b.label) return 0;
            return -1;
        };
      }

      function bubbleItemClick(node) {
        sequence.show(node);
        under_sequence.show(node);
        slider_chart.show(node, year);
        if(slider.current_node() != centerNode) {
          slider.show(node, year);
        }
        sidebar.show(node);
        chart.set_centerNode(node);
        centerNode = node;
      }

      function yearItemClick(new_year) {
        if(slider_chart.current_month != 0 && year == new_year) {
          month = 0;
          slider.set_month(month);
          $("#slider_compare").find("rect").css("fill-opacity", "0.5").css("fill", "#9ecae1");
        }
        year = new_year;
        monthItemClick(month);
      }

      function monthItemClick(new_month) {
        if (month == new_month) {
          month = 0;
        } else {
          month = new_month;
        }

        current_data = buildData(_data)
        preprocessData(current_data, 7);

        var curr_node;
        if (chart.getCenterNode) {
          curr_node = chart.getCenterNode(current_data);
          slider.set_centerNode(centerNode);
        } else if(centerNode != current_data && !chart.getCenterNode) {
          curr_node = chart.get_CenterNode(centerNode);
          slider.set_centerNode(curr_node);
        }
        chart.show(current_data);
        chart.selectNode(curr_node);
      }

      function ItemClick(node) {
        sequence.show(node);
        under_sequence.show(node);
        slider_chart.show(node, year);
        slider.show(node, year);
        sidebar.show(node);
        chart.set_centerNode(node);
        chart.selectNode(node);
      }

      // get current data for all visifies
      function buildData(item) {
        if (!item.amount)
          return;

        var node = {}

        node['taxonomy'] = item.taxonomy

        $.each(item.amount, function(k, v) {
          var amount = (v[year] && v[year][month]) ? v[year][month] : { total: 0 }

          if (k == data_type) {
            node['amount'] = amount['total']
            if (amount['fonds']) {
              node['amount_fond'] = amount['fonds']
            }
          } else {
            node['amount_'+k] = amount['total']
          }
        })

        if (!node['amount'] || node['amount'] == 0)
          return

        node['history'] = item.amount[data_type]

        $.each(['key', 'label', 'color', 'icon'], function(k, v) {
          node[v] = item[v]
        })

        if (item.children) {
          node.children = []
          $.each(item.children, function(k, v) {
            child = buildData(v)
            if (child) node.children.push(child)
          });
        }

        return node;
      }
    }


    $(document).ready(function() {

      I18n.locale = window.aHelper.lang();

      function set_visiframe_inframe() {

        if (window.top != window.self) {
          src = window.location.href;
          $('#embed_visual input').val("<iframe width='900' height='600' src='" + src + "'></iframe>")
          $('.tab-content iframe').attr('src', src)
          $('#embed_visual').find('.iframe_size_select').html("<option value=\"300\">450x600</option>\
                                                                <option value=\"default\" selected>900x1200</option>\
                                                                <option value=\"900\">1350x1900</option>\
                                                                <option value=\"other\">" + I18n.t('iframe.size') + "</option>")
          $('#embed_visual').find('.iframe_other_size').html("");
        } else {
          $('.embed_btn').html("");
        }

      }

      set_visiframe_inframe();

    })
  });
