.right-panel.col-xs-4.pull-right
  = render partial: 'event'

.col-xs-offset-1.col-xs-6
  = render partial: 'pie_cycle', :locals => { calendar: @calendar }


:javascript

  $(document).ready(function() {

    var pie = aCalendarPie();
    pie.init_pie( {loadedCallback: calendar_pie_events} );


    function calendar_pie_events() {
      d3.selectAll("#svg_calendar g path")
         .on("click", function(d) {
           selectEvent(d.data.id);
         })

         .on("mouseover", function(d) {
           var s = Snap.select('#calendar_pies svg g');
           s.append(this); // to move current path to the front
           var pathEl = Snap.select('#path_' + d.data.id);
           if(pathEl && !pathEl.hasClass("selected_path")) {
            $(this).css("stroke", $(this).css('fill'));
            $(this).data('fill-opacity', $(this).css('fill-opacity'));
            pathEl.stop().animate( { 'stroke-width': 10, 'fill-opacity': '0.8', 'stroke-opacity': '0.8' }, 1000, mina.elastic);
           }
         })
         .on("mouseout", function(d) {
            var pathEl = Snap.select('#path_' + d.data.id);
            if(pathEl && !pathEl.hasClass("selected_path")) {
              pathEl.stop().animate( { 'stroke-width': 1, 'fill-opacity': $(this).data('fill-opacity'), 'stroke-opacity': '1' }, 1000, mina.elastic);
              $(this).css("stroke", "#ffffff");
            }
         })
    }

    var current_path, current_pathEl;

    function selectEvent(event_id) {
       if (event_id == undefined)
        return;

       $.get("/calendars/calendars/" + "#{@calendar.id}" + "/events/" + event_id);
       $.getJSON( "/widgets/calendar/get_parent_event/#{@calendar.id}/" + event_id, function( data ) {
          var parent_id = data['parent_event'][0]['id'];
          // initial selection of current event
         if(current_path) {
            current_pathEl.stop().animate( { 'stroke-width': 1, 'fill-opacity': current_path.data('fill-opacity'), 'stroke-opacity': '1' }, 1000, mina.elastic);
            current_path.css("stroke", "#ffffff");
            current_pathEl.removeClass('selected_path');
         }
         var path = $("#path_" + parent_id);
         current_path = path;
         path.attr('class', 'events_path actual_path selected_path');
         var pathEl = Snap.select('#path_' + parent_id);
         if(pathEl){
            current_pathEl = pathEl;
            path.css("stroke", path.css('fill'));
            path.data('fill-opacity', path.css('fill-opacity'));
            pathEl.stop().animate( { 'stroke-width': 10, 'fill-opacity': '0.8', 'stroke-opacity': '0.8' }, 1000, mina.elastic);
         }
      })
    }
  });