:css
  .popup {
    margin: 20px;
  }
  .popup td{
    padding-right: 10px;
  }


:css
  .form-inline .form-control {
    width: 100%;
  }

  .search_block, .search_block div {
    padding: 0;
    margin: 0;
    margin-bottom: 10px;
  }

  .search_block .form-control {
    height: 37px;
  }

.search_block.col-xs-12
  .input-group
    = text_field_tag :q, '', :class => 'form-control', :placeholder => "Пошук за адресою ремонту"
    .input-group-btn
      = button_tag(type: 'submit', :class => 'btn btn-primary', :id => 'search_btn') do
        = t('form.search')
        %i.fa.fa-search.fa-lg

= render partial: 'map_ukraine'

:javascript

  $(document).ready(function() {

    var embed_code = aMapEmbedCode();
    var src = 'http://' + window.location.host + "/repairing/maps/frame/6/";
    embed_code.initialize({width: '100%', height: '800px', el_id: "#embed_code", src: src});

    var categories, category = "all"
    var town = '#{@town}'
    var selected_year='#{@year}';

    var aRepairMap = RepairMap({
      zoom: parseInt('#{@zoom}'),
      minZoom: 5,
      maxZoom: 16,
      center: JSON.parse('#{@map_center.to_json}'),
      scrollWheelZoom: true
    })

    // add markers
    $.ajax({
      method: 'get',
      url: '#{repairing_geo_json_path}',
      data: {
        town: town,
      },
      dataType: 'json',
    })
    .done(function (data) {

      function addMarkers() {
        filtered_data = {type: data.type, features: []}

        data.features.forEach(function (feature){
          if ((selected_year == '' || feature.properties.year == selected_year)
           && (town == '' || feature.properties.town_id == town)
           && (category == 'all' || category == feature.properties.parent_category_id)) {
            filtered_data.features.push(feature)
          }
        })

        aRepairMap.addGeoJsonPoints(filtered_data, getPoint, {
          clustered: true,
          style: {
            opacity: 0.8,
          },
          hoverStyle: {
            opacity: 1,
          },
          featureClickCallback: onFeatureClick,
          getMapPopupContent: getMapPopupContent,
          //getInfoContent: getInfoContent,
          selectPath: false,
          getPoint: getPoint
        })
      }

      addMarkers()

      categories = JSON.parse('#{@categories.to_json(:except => :img)}')
      aRepairMap.addCategoryControl(categories);


      //aRepairMap.addYearLayer(new Date().getFullYear());

      $('#category_btns .btn').on("click",function(){
        if($(this).hasClass('active')){
          $('#category_btns .btn').removeClass('active');
          $('#category_title').html('');
          category = "all";
        } else {
          $('#category_btns .btn').removeClass('active');
          $(this).addClass('active');
          $('#category_title').html($(this).attr('title'));
          category = $(this).data('id');
        }

        //updateCategoryControl()
        function updateCategoryControl(){
          if(category == "all") {
            $('#subcategories').html('');
          } else {
            var content = "<div class='checkbox'><label style='font-weight:bold;'><input type='checkbox' value='all' checked='checked'>всі види робіт</label></div>";
            $.each(categories[category], function(i,d){
              content += "<div class='checkbox'><label><input type='checkbox' value='" + d._id.$oid + "' checked='checked'>" + d.title + "</label></div>"
            });
            $('#subcategories').html(content);
            var all_work = $('input[value="all"]');
            all_work.on("change", function(){
              var subcategories = $('#subcategories input[type="checkbox"]');
              if($(this).attr('checked')){
                subcategories.removeAttr('checked');
                subcategories.prop('checked', false);

                //markers.getLayers()[0].eachLayer(function(layer){
                //  map.removeLayer(layer);
                //});
              } else {
                subcategories.attr('checked','checked');
                subcategories.prop('checked', true);
                //markers.getLayers()[0].eachLayer(function(layer){
                //  if(layer.feature.properties.parent_category_id == category && (layer.feature.properties.town_id == town || !town) && layer.feature.properties.year == year){
                //    map.addLayer(layer);
                //  }
                //});
              }
            });
            $('#subcategories input[type="checkbox"]:not(input[value="all"])').on("change",function(){
              var checked = $('#subcategories input[type="checkbox"]:checked');

              //markers.getLayers()[0].eachLayer(function(layer){
              //  if(layer.feature.properties.parent_category_id == category){
              //    map.removeLayer(layer);
              //    $.each(checked, function(i,d){
              //      var sub = $(d).val();
              //      if(sub == layer.feature.properties.category_id && (layer.feature.properties.town_id == town || !town) && layer.feature.properties.year == year) {
              //        //map.addLayer(layer);
              //      }
              //    })
              //  }
              //});
              if(checked.length < categories[category].length || (checked.length == categories[category].length && all_work.attr('checked'))){
                all_work.removeAttr('checked');
                all_work.prop('checked', false);
              } else {
                all_work.attr('checked','checked');
                all_work.prop('checked', true);
              }
            })
          }

        }

        addMarkers()
      })

      $("#year_select").on("change", function(){
        selected_year = $(this).val()

        addMarkers()
      });

      $('#q').keypress(function (e) {
        if (e.which == 13) {
          $('#search_btn').trigger("click");
          return false;
        }
      });

      $("#search_btn").on("click", function(){
        aRepairMap.showAdressMarker($("#q").val());
      })

      $('#map_town').select2({
        sortResults: function(results, container, query) {
          if (query.term) {
              // use the built in javascript sort function
              return results.sort(function(a, b) {
                  if (a.text.length > b.text.length) {
                      return 1;
                  } else if (a.text.length < b.text.length) {
                      return -1;
                  } else {
                      return 0;
                  }
              });
          }
          return results;
      },
        allowClear: true,
        multiSelect: false,
        multiple: false,
        minimumInputLength: 2,
        placeholder: "Обрати місто",
        width: '100%',
        ajax: {
          url: '#{search_for_towns_town_path}',
          dataType: 'json',
          quietMillis: 250,
          data: function (term, page) {
            return {
              query: term, // search term
            };
          },
          results: function (data, page) {
            return { results: data };
          },
          cache: true
        },
      }).on("change", function(){
        town = $(this).val();
        addMarkers()
        //aRepairMap.addTownLayer(town);
      });
    })
    .fail(function () {
    });

    var Icon = L.Icon.extend({ options: { iconSize: [28, 37] }});

    function getPoint(properties) {
      var point = {}
      if(properties.img) {
        point.icon = new Icon({iconUrl: properties.img});
      } else {
        //point.icon = new L.Icon.Default();
        point.icon = new Icon({iconUrl: '/assets/repairing/default_icon.png'});
      }
      return point;
    }

    function onFeatureClick(feature, popup) {
        aRepairMap.showRoute(feature);
    }

    function getMapPopupContent(e) {
      var content = e.latlng.toString()
      return content
    }

    // old function for render info popup
    // was commented on 18.04.2016
    /*function getInfoContent(properties) {
      var content = "";
      if (properties != "Ukraine") {
        content += '<div class="popup"><table>'
        if (properties.subject != '') content += '<tr><td>Об\'єкт: </td>' + '<td><b>' + properties.subject + '</b></td>' + '</tr>'
        if (properties.address != '') content += '<tr><td>Адреса: </td>' + '<td><b>' + properties.address + '</b></td>' + '</tr>'
        if (properties.category != '') content += '<tr><td>Роботи: </td>' + '<td><b>' + properties.category + '</b></td>' + '</tr>'
        if (properties.obj_owner != '') content += '<tr><td>Виконавець: </td>' + '<td><b>' + properties.obj_owner + '</b></td>' + '</tr>'
        content += '<tr class="separator"><td>Вартість: </td>' + '<td><b>' + (properties.amount > 0 ? window.aHelper.short_label(properties.amount) + ' грн.' : 'не вказано') + '</b></td>' + '</tr>'
        content += '</table></div>';
      }
      return content;
    }*/


  })