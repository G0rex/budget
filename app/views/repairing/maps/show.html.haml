:css
  .map_container {
    height: 800px;
  }


= content_for :top do
  .map_container
    = render partial: 'map'

:javascript

  $(document).ready(function() {

    var aRepairMap = RepairMap({
      zoom: 6,
      minZoom: 5,
      maxZoom: 14,
      bounds: [ [47.54677, 21.44531], [52.32182, 41.52832]],
      scrollWheelZoom: true
    })

    // add markers
    $.ajax({
      method: 'get',
      url: '#{repairing_geo_json_path}',
      dataType: 'json',
    })
    .done(function (data) {
      $.each(data, function(i, d){
        aRepairMap.addGeoJsonPoints([i, d], getPoint, {
          clustered: true,
          style: {
            opacity: 0.8,
          },
          hoverStyle: {
            opacity: 1,
          },
          featureClickCallback: onFeatureClick,
          getMapPopupContent: getMapPopupContent,
          getInfoContent: getInfoContent,
          selectPath: false,
          getPoint: getPoint
        })
      })
      aRepairMap.addCategoryControl(JSON.parse('#{@categories.to_json}'));
      $('#category_btns .btn').on("click",function(){
        if($(this).hasClass('active')){
          $('#category_btns .btn').removeClass('active');
          $('#category_title').html('');
          aRepairMap.addCategoryLayer("all");
        } else {
          $('#category_btns .btn').removeClass('active');
          $(this).addClass('active');
          $('#category_title').html($(this).attr('title'));
          aRepairMap.addCategoryLayer($(this).data('id'));
        }
      })
    })
    .fail(function () {
    });


    var HouseIcon = L.Icon.extend({ options: { iconSize: [32, 28] }});
    var RoadIcon = L.Icon.extend({ options: { iconSize: [32, 28] }});

    var icons = {}
    icons.house = new HouseIcon({iconUrl: '/assets/repairing/repair_house_small.png'})
    icons.road = new RoadIcon({iconUrl: '/assets/repairing/repair_road_small.png'})

    function getPoint(properties) {
      var point = {}
      switch (properties.repair) {
        case 'house':
          point.icon = icons.house
          break
        case 'road':
          point.icon = icons.road
          break
        default:
          point.icon = new L.Icon.Default()
          break
      }

      return point
    }

    function onFeatureClick(feature, popup) {
    }

    function getMapPopupContent(e) {
      var content = e.latlng.toString()
      return content
    }

    function getInfoContent(properties) {
      var content = "";
      if(properties != "Ukraine") {
      content += '<div class="popup">' +
                  '<h3>' + properties.title + '</h3>' +
                  '<p>' + properties.address + '</p>' +
                  '<p>' + properties.amount + '</p>' +
                 '</div>';
      }
      return content;
    }

  });
