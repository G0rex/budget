- model_class = Repairing::Layer

:css
  .map_container {
    height: 750px;
  }

= content_for :header do
  .head
    %i.fa.fa-map
    = "#{@repairing_layer.town}, #{@repairing_layer.title}"

  .col-xs-6.pull-right
    = render partial: 'search', :locals => {layer: @repairing_layer }

.map_container.col-xs-9
  = render partial: 'public/home/map'

.col-xs-3
  .panel.panel-default
    .panel-heading
      Вибрано на карті
    .panel-body
      #repair

.clear

%hr


= render 'form'

= link_to 'Show', @repairing_layer
\|
= link_to 'Back', repairing_layers_path



:javascript

  $(document).ready(function() {

    var aRepairMap = RepairMap({ zoom: 6, minZoom: 5, maxZoom: 24,
      bounds: [ [47.54677, 21.44531], [52.32182, 41.52832]],
      getMapPopupContent: getMapPopupContent,
    })

    // add markers
    $.ajax({
      method: 'get',
      url: '#{repairing_geo_json_path}',
      dataType: 'json',
    })
    .done(function (data) {
      aRepairMap.addGeoJsonPoints(data, getPoint, {
        clustered: true,
        style: {
          opacity: 0.8,
        },
        hoverStyle: {
          opacity: 1,
        },
        featureClickCallback: onFeatureClick,
        dragCallback: onDrag,
        getInfoContent: getInfoContent,
      })
    })
    .fail(function () {
    });


    var HouseIcon = L.Icon.extend({ options: { iconSize: [32, 28] }});
    var RoadIcon = L.Icon.extend({ options: { iconSize: [32, 28] }});

    var icons = {}
    icons.house = new HouseIcon({iconUrl: '/assets/repairing/repair_house_small.png'})
    icons.road = new RoadIcon({iconUrl: '/assets/repairing/repair_road_small.png'})

    function getPoint(properties) {
      var point = {}
      switch (properties.repair) {
        case 'house':
          point.icon = icons.house
          point.draggable = true
          break
        case 'road':
          point.icon = icons.road
          break
        default:
          point.icon = new L.Icon.Default()
          break
      }

      return point
    }

    function onMapClick(feature, popup) {
    }

    function getMapPopupContent(e) {
      var content = e.latlng.toString()
      return content
    }

    function getInfoContent(properties) {
      var content =
            '<div class="popup">' +
              '<h3>' + properties.title + '</h3>' +
              '<p>' + properties.address + '</p>' +
              '<p>' + properties.amount + '</p>' +
            '</div>'

      return content
    }


    var _removedFeature
    var _selectedFeature

    function onFeatureClick(feature, target) {
      selectFeature(feature, target)
    }

    function onDrag(layer, ll) {
      $.ajax({
        method: 'PUT',
        url: '#{repairing_layer_repair_path(@repairing_layer.id, "%id%")}'.replace("%id%", layer.feature.properties.id),
        dataType: 'json',
        cache: false,
        data: {
          repairing_repair: {
            coordinates: [ll.lat, ll.lng]
          }
        }
      })
      .fail(function () {
        alert('Не вдалось зберегти дані')
      })
    }



    $('.search_map form').bind("ajax:success", function(f, data){
      if (data.features) {
        selectFeature(data.features[0])
      } else {
        aRepairMap.addGeoJson(data)
      }
    });


    function selectFeature(feature, target) {
      $('#repair').html('');

      if (_removedFeature) {
        url = '#{repairing_layer_repair_path(@repairing_layer.id, "%id%")}'.replace("%id%", _removedFeature.properties.id)
        _removedFeature = undefined

        $.ajax({
          method: 'GET',
          cache: false,
          url: url,
        }).done(function (data) {
          aRepairMap.addGeoJson(data)
        })
      }

      _selectedFeature = feature

      if (_selectedFeature) {
        $.ajax({
          method: 'GET',
          cache: false,
          url: '#{edit_repairing_layer_repair_path(@repairing_layer.id, "%id%")}'.replace("%id%", _selectedFeature.properties.id),
        })
        .fail(function () {
          console.log('click fail')
        })

        if (_selectedFeature.properties.repair == "road") {
          if (target) {
            _removedFeature = target.feature
            aRepairMap.map.removeLayer(target)
          }

          editRoute()
        } else {
          aRepairMap.editRoute([])
        }
      }

      function editRoute() {
        var coordinates = _selectedFeature.properties.route

        var waypoints = []
        waypoints.push({ latLng: L.latLng(coordinates[0]) });
        waypoints.push({ latLng: L.latLng(coordinates[coordinates.length - 1]) });

        aRepairMap.editRoute(waypoints, routeFoundCallback)

        function routeFoundCallback(route){
          var coordinates = ''
          $.each(route, function(key,val) {
            coordinates += val + ' '
          })

          $.ajax({
            method: 'PUT',
            url: '#{repairing_layer_repair_path(@repairing_layer.id, "%id%")}'.replace("%id%", _selectedFeature.properties.id),
            dataType: 'json',
            data: {
              repairing_repair: {
                coordinates: coordinates
              }
            }
          })
          .fail(function () {
            alert('Не вдалось зберегти дані')
          })
        }
      }
    }


  });
