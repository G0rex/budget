:scss
  // init colors
  $button-background: #0c2231;
  $button-border: #0c2231;
  $button-active: #ffd304;
  $button-text: white;
  $search-background: white;
  $search-border: #0c2231;

  #search-data {
    & .row > div {
      min-height: 30px;
    }
    .form-group {
      float: left;
      width: 100%;
      .select2-container {
        border: none;
        .select2-choice {
          height: 33px;
          line-height: 33px;
          background: $search-background;
          border: 1px solid $search-border;
          border-radius: 0;
          &:before {
            content: '\f002';
            font-family: FontAwesome;
            position: absolute;
            right: 0;
            cursor: pointer;
            font-size: 20px;
            color: $search-background;
            width: 33px;
            background: $search-border;
            text-align: center;
            margin: -2px auto;
          }
          .select2-chosen {
            padding-top: 0;
            margin-right: 55px;
          }
          .select2-search-choice-close {
            right: 40px;
          }
          .select2-arrow {
            display: none;
          }
        }
      }
    }
    .advanced_search_button,
    .btn-switch-role {
      background: $button-background;
      border: 2px solid $button-border;
      color: $button-text;
      font-weight: bold;
      min-width: 125px;
      border-radius: 0;
      padding: 4px 10px;
    }
    .btn-switch-role[for="_role_payers"] {
      &:before {
        content: '\f111';
        font-family: FontAwesome;
        padding-right: 5px;
      }
    }
    .btn-switch-role[for="_role_recipt"] {
      &:before {
        content: '\f0c8';
        font-family: FontAwesome;
        padding-right: 5px;
      }
    }
    .btn-switch-role:before {
      color: $button-text;
    }
    input:checked + .btn-switch-role {
      background: $button-text;
      color: $button-background;
      border: 1px solid $button-border;
      &:after {
        content: '';
        display: block;
        border: 1px solid $button-active;
      }
      &:before {
        color: $button-active;
      }
    }
    .search-button {
      background: $button-background;
      color: $button-text;
      text-align: center;
      height: 33px;
      width: 33px;
      .fa-search {
        bottom: 0;
      }
    }
    #most-received {
      height: 400px;
      display: none;
      margin-bottom: 30px;
      .subtitle {
        height: 30px;
        font-family: 'Lato', sans-serif;
        font-size: 18px;
        font-weight: 500;
      }
      canvas {
        height: 100%;
        width: 100%;
      }
    }
  }
  @media screen and (max-width: 1024px) {
    #search-data {
      #most-received {
        height: 300px;
      }
    }
  }
  @media screen and (max-width: 992px) {
    #search-data {
      #most-received {
        height: 200px;
      }
    }
  }
  .social-btns {
    margin: 0 0 10px 0;
  }
   // hide sidebar for share
  .at4-share-outer {
    display: none;
  }

#search-data
  = simple_form_for '', remote: true do |f|
    .row
      .col-md-7
        = f.input(:item, type: 'hidden', collection: @items.map{ |classd| ["#{classd.pnaz} #{classd.edrpou}", classd.edrpou] },
        input_html: {'data-town-id' => params['town_id']}, label: false)
      .col-md-5
        .row
          .col-lg-7
            = f.collection_radio_buttons :role, [['payers', t('.payer')] ,['recipt', t('.recipt')]], :first, :last, {checked: 'payers'} do |b|
              = b.radio_button(style: 'display: none') + b.label(class: 'btn btn-default btn-switch-role')
          .col-lg-5
            = link_to modules_classifier_advanced_search_url(@town), id: 'advanced_search_button', class: 'btn btn-primary advanced_search_button', remote: true do
              %i.fa.fa-cogs
              = t('.advanced_button')

  .results

  .social-btns#share_results
    -# TODO: development solution, comment this in production
    .addthis_inline_share_toolbox
    -# TODO: uncomment this in production ('prod' and 'dev' use different version 'addthis')
    -#.addthis_sharing_toolbox

  #most-received
    -#= render partial: 'chart'
    .social-btns#share_chart
      -# TODO: development solution, comment this in production
      .addthis_inline_share_toolbox
      -# TODO: uncomment this in production ('prod' and 'dev' use different version 'addthis')
      -#.addthis_sharing_toolbox

  = render partial: 'layouts/spinner'

:javascript
  $(document).ready(function() {

    // init select2 and add event -> search if change value (if select not empty)
    $('#_item').select2({
      placeholder: I18n.t('modules.classifier.search_data.simple_form_placeholder'),
      allowClear: true
    }).on('change', function(data) {
      // check for empty value, if empty -> do nothing
      if(data.val) {
        classifier_search("#{modules_classifier_search_e_data_url}", prepare_search_data(), $('#share_results > .addthis_inline_share_toolbox'));
        classifier_search("#{modules_classifier_draw_chart_url}", prepare_search_data(), $('#share_chart > .addthis_inline_share_toolbox'));
      }
    });

    // add event -> search if change value (if select not empty)
    $('[name="[role]"]').on('change', function() {
      var item = $('#_item').val();
      // check for empty value, if empty -> do nothing
      if(item) {
        simple_search("#{modules_classifier_search_e_data_url}", item);
      }
    });

    // add new event and clear previous events for sorting search results
    $('.results').on('click', '#edata_payments th', function() {
      var _this = $(this);
      $('#edata_payments th').not(_this).removeClass('active').attr('data-sort-direction', 'asc');
      var sort_conf = {
        sort_col: _this.attr('data-column'),
        sort_dir: _this.attr('data-sort-direction')
      };
      simple_search("#{modules_classifier_search_e_data_url}", $('#_item').val(), sort_conf);
      _this.attr('data-sort-direction', sort_direction(sort_conf['sort_dir'])).addClass('active');
    });

    // add breadcrumbs element
    $('#advanced_search_button').click(function(){
        var breadcrumbs_title = $.trim($(this).text());
        addBreadcrumbs(breadcrumbs_title, "#{modules_classifier_search_data_path(@town)}");
    });
  });

  function prepare_search_data(sort_col, sort_dir) {
    var data = {
      town_id: $('#_item').data('town-id'),
      sort_col: sort_col,
      sort_dir: sort_dir
    }
    data[$('[name="[role]"]:checked').val() + '_edrpous'] = $('#_item').val();
    return data;
  }