:scss
  // init colors
  $button-background: #0c2231;
  $button-border: #0c2231;
  $button-line: #ffd304;
  $button-text: white;
  $search-background: white;
  $search-border: #0c2231;

  #search-data {
    .form-group {
      float: left;
      width: calc(100% - 33px);
      .select2-container {
        border: none;
        .select2-choice {
          height: 33px;
          line-height: 33px;
          background: $search-background;
          border: 1px solid $search-border;
          border-radius: 0;
          .select2-arrow {
            display: none;
          }
        }
      }
    }
    .btn-switch-role {
      background: $button-background;
      border: 1px solid $button-border;
      color: $button-text;
      font-weight: bold;
      width: 110px;
      border-radius: 0;
    }
    input:checked + .btn-switch-role {
      background: $button-text;
      color: $button-background;
      text-decoration: underline $button-line;
    }
    .search-button {
      background: $button-background;
      color: $button-text;
      text-align: center;
      height: 33px;
      width: 33px;
      .fa-search {
        bottom: 0;
      }
    }
  }
   #items-list{
    border: 1px solid black;
    height: 600px;
    overflow: auto;
    display: none;
   }



#search-data
  -#%h1
    = t ('.header')

  = simple_form_for '', remote: true do |f|
    .row
      .col-md-3
        = f.input :item_type_payer,:collection => @types.map{|type| [type.name, type.code]}, input_html: {'data-town-id' => params['town_id'], 'data-role' => 'payer'}, label: false, class: 'type'
      .col-md-4
        = f.input :item_payer, label: false, class: 'item'

      .col-xs-4
        = f.button :submit, t('form.search'), class: 'btn btn-primary', id: 'search'
    .row
      .col-md-3
        = f.input :item_type_recipt,:collection => @types.map{|type| [type.name, type.code]}, input_html: {'data-town-id' => params['town_id'], 'data-role' => 'recipt'}, label: false, class: 'item'
      .col-md-4
        = f.input :item_recipt, label: false
      .col-xs-4
        = link_to t('form.search'), modules_classifier_search_data_path(@town), :class => 'btn btn-primary', 'data-remote'=>true, class: 'type'

    .results

#items-list

:javascript
  $(document).ready(function() {
    console.log(1);
     $('#_item_type_payer').select2({
      // placeholder: "Choose something",
      allowClear: true
    });
    $('#_item_type_recipt').select2({
      // placeholder: "Choose something",
      allowClear: true
    });
    $('#_item_type_payer, #_item_type_recipt').on('change', function(data) {
      console.log(1);
      get_items($(this).val(), $(this).data('role'));
      $(this).parent().find('#_item').val("");
    });

    $('#search').on('click', function(){
      get_data($('#_item_type_payer').val());
      return false;
    });

    function get_data(d) {
      console.log(1);
      var town_id = $('#_item').data('town-id');
      var role = 1;
      $.ajax({
        type: 'post',
        url: "#{modules_classifier_search_e_data_url}",
        dataType: 'script',
        data: {
          town_id: town_id,
          item: d,
          role: role
        }
      });
    }

    function get_items(d, role) {
    var town_id = $('#_item_type_payer').data('town-id');
    var role = role == 'payer' ? 1 : 0;
      console.log(d);
      $.ajax({
      type: 'post',
      url: "#{modules_classifier_by_type_url}",
      dataType: 'script',
      data: {
        town_id: town_id,
        type: d,
        role: role
      }
    });
    }
  });
