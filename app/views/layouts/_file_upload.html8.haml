.container
  <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
  .row.fileupload-buttonbar
    .span7
      <!-- The fileinput-button span is used to style the file input field as button -->
      %span.btn.btn-success.fileinput-button
        %i.icon-plus.icon-white
        %span
          Add files
          %input#fileupload2{:multiple => "", :name => "files[]", :type => "file"}
  <!-- The table listing the files available for upload/download -->
  %table.table.table-striped
    %tbody.files{:data_toggle=>"modal-gallery", :data_target=>"#modal-gallery"}

:javascript
  var fileUploadErrors = {
  maxFileSize: 'File is too big',
  minFileSize: 'File is too small',
  acceptFileTypes: 'Filetype not allowed',
  maxNumberOfFiles: 'Max number of files exceeded',
  uploadedBytes: 'Uploaded bytes exceed file size',
  emptyResult: 'Empty file upload result'
  };
  console.log(3);


<!-- The template to display files available for upload -->
%script#template-upload{:type=>"text/x-tmpl"}


:javascript
  $(function () {
      // Initialize the jQuery File Upload widget:
      $('#fileupload2').fileupload();
      //
      // Load existing files:
      $.getJSON($('#fileupload').prop('action'), function (files) {
          console.log(4);
        var fu = $('#fileupload').data('blueimpFileupload'),
          template;
        fu._adjustMaxNumberOfFiles(-files.length);
        console.log(files);
        template = fu._renderDownload(files)
          .appendTo($('#fileupload .files'));
        // Force reflow:
        fu._reflow = fu._transition && template.length &&
          template[0].offsetWidth;
        template.addClass('in');
        $('#loading').remove();
      });

  });
</script>
