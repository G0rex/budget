.circles
  #sidebar
  #chart

:javascript
  $(document).ready(function() {
    var w = $('body').width() - 350,
        h = w * 0.4,
        r = w * 0.4,
        x = d3.scale.linear().range([0, r]),
        y = d3.scale.linear().range([0, r]),
        node,
        root;

    var totalSize = 0;

    var tooltip = d3.select(".circles").append("div")
        .attr("id", "tooltip")
        .style("opacity", 0);

    var totalSize = 0;

    var pack = d3.layout.pack()
        .size([r, r])
        .value(function(d) { return d.amount; })

    var vis = d3.select(".circles #chart").insert("svg:svg", "h2")
        .attr("width", w)
        .attr("height", h)
      .append("svg:g")
        .attr("transform", "translate(" + (w - r) / 2 + "," + (h - r) / 2 + ")");

    d3.json("/budget_files/get_sunburst_data/#{budget_file_id}", function(data) {
      node = root = data;

      var nodes = pack.nodes(root);

      vis.selectAll("circle")
          .data(nodes)
          .enter().append("svg:circle")
          .attr("class", function(d) { return d.children ? "parent" : "child"; })
          .attr("cx", function(d) { return d.x; })
          .attr("cy", function(d) { return d.y; })
          .attr("r", function(d) { return d.r; })
          .on("click", function(d) {
            $('.circles #sidebar').html(getItemInfoHtml(d))
            return zoom(node == d ? root : d);
          })
          .on("mouseover", function(d) {
            if(d.title == '')
              return

            tooltip.html(getTooltipHtml(d))
             .style("left", (d3.event.pageX) + "px")
             .style("top", (d3.event.pageY) + "px");
            tooltip.transition()
             .duration(200)
             .style("opacity", .8)
          })
          .on("mouseout", function(d) {
             tooltip.transition()
               .duration(200)
               .style("opacity", 0);
          })

      totalSize = vis.selectAll("circle").node().__data__.value

      vis.selectAll("text")
          .data(nodes)
          .enter().append("svg:text")
          .attr("class", function(d) { return d.children ? "parent" : "child"; })
          .attr("x", function(d) { return d.x; })
          .attr("y", function(d) { return d.y; })
          .attr("dy", ".35em")
          .attr("text-anchor", "middle")
          .style("opacity", function(d) { return d.r > 20 ? 1 : 0; })
          .text(function(d) { return d.name; });

      d3.select(window).on("click", function() { zoom(root); });
    });

    function zoom(d, i) {
      var k = r / d.r / 2;
      x.domain([d.x - d.r, d.x + d.r]);
      y.domain([d.y - d.r, d.y + d.r]);

      var t = vis.transition()
          .duration(d3.event.altKey ? 7500 : 750);

      t.selectAll("circle")
          .attr("cx", function(d) { return x(d.x); })
          .attr("cy", function(d) { return y(d.y); })
          .attr("r", function(d) { return k * d.r; });

      t.selectAll("text")
          .attr("x", function(d) { return x(d.x); })
          .attr("y", function(d) { return y(d.y); })
          .style("opacity", function(d) { return k * d.r > 20 ? 1 : 0; });

      node = d;
      d3.event.stopPropagation();
    }


    function getItemInfoHtml(node) {
      percentage = (100 * node.value / totalSize).toPrecision(3);
      title = node.title || ''
      name = node.name || ''
      div = "<h4 class='code'>" + name + "</h4>"
        + "<div class='title'>" + title + "</div>"
        + "<h3 class='percentage'>" + percentage + "%</h3>"
        + "<h4 class='amount'>" + node.value.toLocaleString() + " грн</h4>"

      if (node.description) {
        div = div + "<hr/>" +  "<div class='description'>" + node.description + "</div>"
      }

      return div
    }

    function getTooltipHtml(node) {
      percentage = (100 * node.value / totalSize).toPrecision(3);
      title = node.title || ''
      div = "<h5 class='percentage'>" + percentage + "% - " + node.value.toLocaleString() + " грн</h5>"
        + "<hr/>"
        + "<div class='title'>" + title + "</div>"

      return div
    }
  });
