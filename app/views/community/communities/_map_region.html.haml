:css
  #custom_map {
    border: none;
    margin-top: 0px;
    box-shadow: none;
    background: transparent;
    min-height: 400px;
    height: 100%;
  }

  #custom_map path {
    fill-opacity: 0.3;
  }

  #custom_map path:hover {
    fill-opacity: 0.5;
  }

  #custom_map .leaflet-control-zoom.leaflet-bar.leaflet-control, .leaflet-control-attribution.leaflet-control {
    display: block;
  }

  .draggable {
    cursor: move;
  }


.map_container#custom_map.col-sm-12
  = render partial: 'map'

:javascript

  $(document).ready(function() {

    I18n.locale = window.aHelper.lang();

    var feature = JSON.parse('#{@feature.to_json}');
    var editable = feature.properties.edit;

    var repairMapOptions = {
      scrollWheelZoom: true,
      minZoom: 6,
      maxZoom: 13,
      dragging: true,
      map_static: false,
      center: feature.properties.center,
      bounds: feature.properties.bounds,
      editable: feature.properties.edit
    };
    var pointOptions = {
      clustered: false,
      style: {
        opacity: 0.8
      },
      hoverStyle: {
        opacity: 1
      },
      featureClickCallback: onCommunityClick,
      getInfoContent: getCommunityContent,
      selectPath: false,
      scale: "community"
    };
    var areasOptions = {
      zIndex: 1,
      featureClickCallback: onCommunityClick,
      getInfoContent: getCommunityContent,
      selectPath: false,
      scale: "community"
    };

    var aRepairMap = RepairMap(repairMapOptions);

    $.ajax({
      method: 'get',
      url: '#{community_geo_json_path}&area_title=' + feature.properties.title,
      dataType: 'json',
    })
    .done(function (data) {
      if(data['areas']['features'].length > 0) {
        aRepairMap.addGeoJsonSvg(data['areas'], areasOptions);
        aRepairMap.addGeoJsonPoints(data['centers'], pointOptions);
      }
    })
    .fail(function (e) {
      console.log(e)
    });

    function onCommunityClick(feature) {
      if(editable) {
        $.get("/community/edit_table/" + feature.properties.id, function(data){
          $("#edit_table").html(data);
        }, "html")
      } else if(feature.properties.link) {
        window.open(feature.properties.link,'_blank');
      }
    }

    function getCommunityContent(properties) {
      var content = "", title = "";
      if(properties != "Ukraine") {
        content += '<h3>' + properties.title + '</h3>';
        if(!feature.properties.edit && properties.participants) {
          content += '<p><b>Склад громади: </b></p><ul>';
          $.each(properties.participants.split(','), function(p, i){
            content += '<li>' + i + '</li>';
          })
          content += '</ul>';
        }
      }
      return content;
    }
  });
