:css
  #custom_map {
    border: none;
    margin-top: 0px;
    box-shadow: none;
    background: transparent;
    min-height: 400px;
    height: 100%;
  }

  #custom_map path {
    fill-opacity: 0.3;
  }

  #custom_map path:hover {
    fill-opacity: 0.5;
  }

  #custom_map .leaflet-control-zoom.leaflet-bar.leaflet-control, .leaflet-control-attribution.leaflet-control {
    display: block;
  }

.map_container#custom_map.col-sm-12
  = render partial: 'map'

:javascript

  $(document).ready(function() {

    I18n.locale = window.aHelper.lang();

    var data_areas, data_towns;
    var repairMapOptions = {
      scrollWheelZoom: true,
      minZoom: 6,
      maxZoom: 13,
      dragging: true,
      map_static: false,
      center: [48.5, 31.2],
      bounds: [ [45, 21.44531], [52.32182, 41.52832]]
    };
    var pointOptions = {
      clustered: false,
      style: {
        opacity: 0.8
      },
      hoverStyle: {
        opacity: 1
      },
      featureClickCallback: onFeatureClick,
      getInfoContent: getTownsContent,
      selectPath: false,
      scale: "Ukraine"
    };
    var areasOptions = {
      zIndex: 1,
      featureClickCallback: onFeatureClick,
      getInfoContent: getAreasContent,
      selectPath: false,
      scale: "Ukraine"
    };

    var aRepairMap = RepairMap(repairMapOptions);

    // add Areas
    $.ajax({
      method: 'get',
      url: '#{community_geo_json_path}&type=areas',
      dataType: 'json',
    })
    .done(function (data) {
      data_areas = data;
      aRepairMap.addGeoJsonSvg(data, areasOptions);
      if('#{@area.title}') {
        var coords = aRepairMap.getGeoCoords('#{@area.id}');
        onFeatureClick(coords['node'], coords['bounds'], coords['center']);
      }
    })
    .fail(function () {
    });

    // add markers
    $.ajax({
      method: 'get',
      url: '#{community_geo_json_path}',
      dataType: 'json',
    })
    .done(function (data) {
      data_towns = data;
      aRepairMap.addGeoJsonPoints(data, pointOptions);
    })
    .fail(function () {
    });

    function onFeatureClick(feature, bounds, center) {
      $.ajax({
        method: 'get',
        url: '#{community_geo_json_path}&area_title=' + feature.properties.title,
        dataType: 'json',
      })
      .done(function (data) {
        if(data['features'].length > 0) {
          window.history.pushState("", "", '/community/communities/' + feature.properties.id);
          $("#custom_map").html('');
          $("#custom_map").html('#{ j render :partial => 'map'}');
          repairMapOptions.center = center;
          repairMapOptions.bounds = bounds;
          aRepairMap = RepairMap(repairMapOptions);
          areasOptions.featureClickCallback = onCommunityClick;
          areasOptions.getInfoContent = getCommunityContent;
          areasOptions.scale = "community";
          aRepairMap.addGeoJsonSvg(data, areasOptions);
          $('#edit_btn').attr("href", "/community/communities_edit/" + feature.properties.id);
        }
      })
      .fail(function (e) {
        console.log(e)
      });
    }

    function onCommunityClick(feature) {
      if(feature.properties.link) {
        window.open(feature.properties.link,'_blank');
      }
    }

    function getAreasContent(properties) {
      var content = "", title = "";
      if(properties != "Ukraine") {
        content += '<h3>' + properties.title + '</h3>' +
                   '<p>Територіальних громад: ' + properties.communities_count + '</p>';
      }
      return content;
    }

    function getTownsContent(properties) {
      var content = "", title = "";
      if(properties != "Ukraine") {
        content += '<h3>' + properties.title + '</h3>';
      }
      return content;
    }

    function getCommunityContent(properties) {
      var content = "", title = "";
      if(properties != "Ukraine") {
        content += '<h3>' + properties.title + '</h3>';
        if(properties.participants) {
          content += '<p><b>Склад громади: </b></p><ul>';
          $.each(properties.participants.split(','), function(p, i){
            content += '<li>' + i + '</li>';
          })
          content += '</ul>';
        }
      }
      return content;
    }
  });
