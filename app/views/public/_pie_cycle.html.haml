.col-sm-12.pies-container#calendar_pies{:calendar_id => @calendar.id }
  %svg#svg_calendar

  .countdown
    = render partial: "countdown"


:javascript

  $(document).ready(function() {
    size = $('.pies-container').width()
    countdown_width = size*60/100
    $('.countdown').css('margin-left', (size - countdown_width) / 2).css('margin-right', (size - countdown_width) / 2).css('width', countdown_width).css('top', size  / 2 - 100)
    $('#logo-rays-container').css('margin-left', (size - countdown_width) / 2 - 20)

    $.getJSON( "#{public_pie_data_path}", { calendar_id: $('#calendar_pies').attr('calendar_id') }, function( data ) {
      var pie = d3.layout.pie()
          .sort(null)
          .value(function(d) { return d.value; });

      var svg = d3.select('#svg_calendar')
          .attr("width", size)
          .attr("height", size)
          .append("g")
          .attr("transform", "translate(" + size / 2 + "," + size / 2 + ")");


      var cut = size*0.05
      var radius1 = Math.min(size, size) / 2;
      var radius2 = radius1 - cut;
      var radius3 = radius2 - cut;
      var radius4 = radius3 - cut;

      var arc1 = create_arc(radius1, radius2)
      var arc2 = create_arc(radius2, radius3)
      var arc3 = create_arc(radius3, radius4)

      var g1 = svg.selectAll(".arc1")
          .data(pie(data.events1))
          .enter().append("g")
          .attr("class", "arc arc1");
      var g2 = svg.selectAll(".arc2")
          .data(pie(data.events2))
          .enter().append("g")
          .attr("class", "arc arc2");
      var g3 = svg.selectAll(".arc3")
          .data(pie(data.events1))
          .enter().append("g")
          .attr("class", "arc arc3");


      append_pathAndText(g1, arc1)
      append_pathAndText(g2, arc2)
      append_pathAndText(g3, arc3)

    })

    function create_arc(radius1, radius2) {
      return d3.svg.arc()
          .outerRadius(radius1)
          .innerRadius(radius2 + 5);
    }

    function append_pathAndText(g, arc) {
      var div = d3.select("body").append("div")
          .attr("class", "tooltip")
          .style("opacity", 0);

      g.append("path")
         .attr("d", arc)
         .style("fill", function(d) { return d.data.color; })
         .style("cursor", function(d) { return (d.data.id == '') ? '' : 'pointer'} )
         .on("click", function(d) {
           if(d.data.id == '')
             return
           $.get("/events/"+d.data.id, { calendar_id: $('#calendar_view').attr('calendar_id') });
         })
         .on("mouseover", function(d) {
           if(d.data.title == '')
             return

           div.transition()
             .duration(200)
             .style("opacity", .7)
             .style("color", d.data.text_color)
             .style("background-color", d.data.color);
           div .html( get_html_for_ev(d) )
             .style("left", (d3.event.pageX - 120) + "px")
             .style("top", (d3.event.pageY - 28) + "px");
         })
         .on("mouseout", function(d) {
           div.transition()
             .duration(200)
             .style("opacity", 0);
         })

         g.append("text")
             .attr("transform", function(d) { return "translate(" + arc.centroid(d) + ")"; })
             .attr("dy", ".35em")
             .style("text-anchor", "middle")
             .html(function(d,i) {
                //return d.data.title;
             })
    }

    function get_html_for_ev(d) {
      return "<h5><i class='fa " + d.data.icon + "'></i> " + d.data.title + "</h5>з <b>" + d.data.starts_at + "</b> по <b>" + d.data.ends_at + "</b><hr/>" + d.data.desc
    }
  })
